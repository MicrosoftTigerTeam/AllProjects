{"version":3,"sources":["webparts/instaFeed/InstaFeedWebPart.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AACrD,OAAO,EACL,qBAAqB,EAErB,qBAAqB,EACtB,MAAM,4BAA4B,CAAC;AACpC,OAAO,KAAK,OAAO,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,WAAW,CAAC;AAChC,OAAO,QAAQ,CAAC;AAQhB;IAA8C,oCAA6C;IAA3F;;IA4DA,CAAC;IA1DQ,iCAAM,GAAb;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,oEAAoE;YAChG,uHAAuH;YACtH,gIAAgI;YACjI,oDAAoD;YACnD,QAAQ;YACR,oFAAoF;YAClF,oKAAoK;YACpK,oKAAoK;YACpK,oKAAoK;YACtK,QAAQ;YACV,QAAQ,CAAC;QACT,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAEM,oCAAS,GAAhB;QACE,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7D,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO;YACjE,IAAI,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC;YAC/B,IAAI,IAAI,GAAE,EAAE,CAAC;YACb,EAAE,CAAA,CAAC,SAAS,KAAK,CAAC,CAAC,CAAA,CAAC;gBAClB,IAAI,IAAI,kGAAkG,CAAC;YAC7G,CAAC;YACD,EAAE,CAAA,CAAC,SAAS,KAAK,CAAC,CAAC,CAAA,CAAC;gBAClB,IAAI,IAAI,iEAAiE,GAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAC,wCAAwC,CAAC;YAC5I,CAAC;YACD,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAID,sBAAc,yCAAW;aAAzB;YACE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAES,uDAA4B,GAAtC;QACE,MAAM,CAAC;YACL,KAAK,EAAE;gBACL;oBACE,MAAM,EAAE;wBACN,WAAW,EAAE,OAAO,CAAC,uBAAuB;qBAC7C;oBACD,MAAM,EAAE;wBACN;4BACE,SAAS,EAAE,OAAO,CAAC,cAAc;4BACjC,WAAW,EAAE;gCACX,qBAAqB,CAAC,aAAa,EAAE;oCACnC,KAAK,EAAE,OAAO,CAAC,qBAAqB;iCACrC,CAAC;6BAEH;yBACF;qBACF;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IACH,uBAAC;AAAD,CA5DA,AA4DC,CA5D6C,qBAAqB,GA4DlE","file":"InstaFeedWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\nimport * as strings from 'InstaFeedWebPartStrings';\r\nimport { Web } from \"sp-pnp-js\";\r\nimport 'jquery';\r\ndeclare var $;\r\n\r\nexport interface IInstaFeedWebPartProps {\r\n  description: string;\r\n  embedURl: string;\r\n}\r\n\r\nexport default class InstaFeedWebPart extends BaseClientSideWebPart<IInstaFeedWebPartProps> {\r\n\r\n  public render(): void {\r\n    this.domElement.innerHTML = \"<div style='display: flex; flex-direction: column; margin: 10px;'>\"+\r\n    \"<div style='display: flex; flex-direction: row; align-items:center; padding: 10px; border-bottom: 0px solid #ebedf2'>\"+\r\n     // \"<div style='width: 40px;'><img src='/sites/NWTDemo/SiteAssets/Chatapp/IMG/instagram.png' style='max-width: 100%;' /></div>\"+\r\n    // \"<h3 style='margin:-7px 0 0 10px;'>NewWave</h1>\"+\r\n     \"</div>\"+\r\n     \"<div id='dataBind' style='display: flex; flex-wrap:wrap; justify-content:center;'>\"+\r\n       // \"<div style='margin:10px;padding:5px; border:1px solid #ebedf2'><iframe height='400' src='\"+this.properties.description+\"embed' frameborder='0'></iframe></div>\"+\r\n       // \"<div style='margin:10px;padding:5px; border:1px solid #ebedf2'><iframe height='400' src='\"+this.properties.description+\"embed' frameborder='0'></iframe></div>\"+\r\n       // \"<div style='margin:10px;padding:5px; border:1px solid #ebedf2'><iframe height='400' src='\"+this.properties.description+\"embed' frameborder='0'></iframe></div>\"+\r\n     \"</div>\"+\r\n   \"</div>\";\r\n   this.readItems();\r\n  }\r\n\r\n  public readItems(){\r\n    let web = new Web(this.context.pageContext.site.absoluteUrl);\r\n    web.lists.getByTitle('InstaFeedListData').items.get().then((results) =>{\r\n      let resultLen = results.length;\r\n      let HTML ='';\r\n      if(resultLen === 0){\r\n        HTML += \"<div style='margin:10px;padding:5px; border:1px solid #ebedf2'><h3>No post to display</h3></div>\";\r\n      }\r\n      if(resultLen !== 0){\r\n        HTML += \"<div style='margin:10px;padding:5px'><iframe height='450' src='\"+results[0].FeedURL.Url+\"embed' frameborder='0'></iframe></div>\";\r\n      }\r\n      $('#dataBind').append(HTML);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('description', {\r\n                  label: strings.DescriptionFieldLabel\r\n                })\r\n                \r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"../../../../../src"}